#!/usr/bin/env python
from sys import (
    argv,
    stderr
)
from traceback import print_exc


CRLF = '\r\n'
LF = '\n'
UTF_8 = 'utf-8'
UTF_8_WITH_BOM = 'utf-8-sig'
UTF_16 = 'utf-16'


def read_file_content(file: str, encoding: str = UTF_16) -> (str, str):
    try:
        with open(file, 'r', encoding=encoding, newline=LF) as fd:
            return encoding, fd.read()
    except (UnicodeDecodeError, UnicodeError):
        return read_file_content(file, encoding=UTF_8_WITH_BOM)


argc = len(argv)
if argc > 1:
    files = argv[1:]

    for file in files:
        try:
            enc, c = read_file_content(file)
        except (UnicodeDecodeError, UnicodeError):
            print('Warning: File \'%s\' doesn\'t have a valid encoding.' % file, file=stderr)
            print_exc()
        else:
            if CRLF in c or enc != UTF_8:
                with open(file, 'w', encoding=UTF_8, newline=LF) as fd:
                    fd.write(c.replace(CRLF, LF))
                print('Cleaned file \'%s\'.' % file)
            else:
                print('File \'%s\' is already a clean UTF-8 LF one.' % file)
else:
    print('Usage: nocrlf <target files>', file=stderr)
    exit(1)